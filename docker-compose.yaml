version: '3.3'
# 网络配置
networks:
  backend:
    driver: ${NETWORKS_DRIVER}
services:
  redis:
    image: redis
    container_name: go-redis-libSystem
    restart: always
    volumes:
      - ./data/redis/data:/data
      - ./data/redis/conf:/redis.conf:/usr/local/etc/redis/redis.conf
      - ./data/redis/logs:/logs
    command:
      - redis-server
    ports:
      - '${REDIS_PORT}:6379'
    privileged: true
    networks:
      - backend
  postgres:
    image: postgres
    container_name: go-postgres
    restart: always
    environment:
      POSTGRES_USER: ${PGSQL_USERNAME}
      POSTGRES_PASSWORD: ${PGSQL_PASSWORD}
      POSTGRES_DB: ${PGSQL_DB}
    ports:
      - '${PGSQL_PORT}:5432'
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data
      - ./data/postgres/config:/config/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./data/postgres/logs:/logs
    privileged: true
    networks:
      - backend
  etcd:                                  # 自定义容器名称
    build:
      context: ./docker/etcd                    # 指定构建使用的 Dockerfile 文件
    environment:
      - TZ=${TZ}
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:                               # 设置端口映射
      - "${ETCD_PORT}:2379"
    networks:
      - backend
    restart: always
  web:
    container_name: gin-server
    build:
      context: .
      dockerfile: dockerfile
    restart: always
    depends_on:
      - postgres  # 确保 postgres 容器先启动
      - redis     # 如果 Gin 也需要 Redis，则可以加上
    volumes:
      # 这个共享卷是用来存放配置文件。
      - ./config/:/app/config/
      # 该共享卷用来存储日志文件
      - ./data/running/logs/:/app/logger/
      - ./data/uploads/:/app/uploads/
    ports:
      - '8080:8080'
