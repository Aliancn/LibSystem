// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: paper.proto

package paper_rpc_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 定义消息类型
type PaperVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperId     int64  `protobuf:"varint,1,opt,name=paper_id,json=paperId,proto3" json:"paper_id,omitempty"`             // 论文id
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                 // 标题
	Author      string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`                               // 作者
	Department  string `protobuf:"bytes,4,opt,name=department,proto3" json:"department,omitempty"`                       // 所属部门
	Year        string `protobuf:"bytes,5,opt,name=year,proto3" json:"year,omitempty"`                                   // 年份
	Status      string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                               // 状态
	DownloadNum int64  `protobuf:"varint,7,opt,name=download_num,json=downloadNum,proto3" json:"download_num,omitempty"` // 下载次数
	FilePath    string `protobuf:"bytes,8,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`           // 文件路径
	UploadTime  string `protobuf:"bytes,9,opt,name=upload_time,json=uploadTime,proto3" json:"upload_time,omitempty"`     // 创建时间
}

func (x *PaperVO) Reset() {
	*x = PaperVO{}
	mi := &file_paper_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaperVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperVO) ProtoMessage() {}

func (x *PaperVO) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperVO.ProtoReflect.Descriptor instead.
func (*PaperVO) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{0}
}

func (x *PaperVO) GetPaperId() int64 {
	if x != nil {
		return x.PaperId
	}
	return 0
}

func (x *PaperVO) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PaperVO) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *PaperVO) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *PaperVO) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *PaperVO) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PaperVO) GetDownloadNum() int64 {
	if x != nil {
		return x.DownloadNum
	}
	return 0
}

func (x *PaperVO) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *PaperVO) GetUploadTime() string {
	if x != nil {
		return x.UploadTime
	}
	return ""
}

type PaperList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperList []*PaperVO `protobuf:"bytes,1,rep,name=paper_list,json=paperList,proto3" json:"paper_list,omitempty"`
}

func (x *PaperList) Reset() {
	*x = PaperList{}
	mi := &file_paper_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaperList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperList) ProtoMessage() {}

func (x *PaperList) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperList.ProtoReflect.Descriptor instead.
func (*PaperList) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{1}
}

func (x *PaperList) GetPaperList() []*PaperVO {
	if x != nil {
		return x.PaperList
	}
	return nil
}

type GetAllPaperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllPaperRequest) Reset() {
	*x = GetAllPaperRequest{}
	mi := &file_paper_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllPaperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPaperRequest) ProtoMessage() {}

func (x *GetAllPaperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPaperRequest.ProtoReflect.Descriptor instead.
func (*GetAllPaperRequest) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{2}
}

type GetAllPaperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PaperList `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAllPaperResponse) Reset() {
	*x = GetAllPaperResponse{}
	mi := &file_paper_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllPaperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPaperResponse) ProtoMessage() {}

func (x *GetAllPaperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPaperResponse.ProtoReflect.Descriptor instead.
func (*GetAllPaperResponse) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllPaperResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllPaperResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetAllPaperResponse) GetData() *PaperList {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPaperByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPaperByIdRequest) Reset() {
	*x = GetPaperByIdRequest{}
	mi := &file_paper_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaperByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaperByIdRequest) ProtoMessage() {}

func (x *GetPaperByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaperByIdRequest.ProtoReflect.Descriptor instead.
func (*GetPaperByIdRequest) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{4}
}

func (x *GetPaperByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPaperByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PaperVO `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPaperByIdResponse) Reset() {
	*x = GetPaperByIdResponse{}
	mi := &file_paper_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaperByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaperByIdResponse) ProtoMessage() {}

func (x *GetPaperByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaperByIdResponse.ProtoReflect.Descriptor instead.
func (*GetPaperByIdResponse) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{5}
}

func (x *GetPaperByIdResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPaperByIdResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPaperByIdResponse) GetData() *PaperVO {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPaperByTitleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *GetPaperByTitleRequest) Reset() {
	*x = GetPaperByTitleRequest{}
	mi := &file_paper_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaperByTitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaperByTitleRequest) ProtoMessage() {}

func (x *GetPaperByTitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaperByTitleRequest.ProtoReflect.Descriptor instead.
func (*GetPaperByTitleRequest) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{6}
}

func (x *GetPaperByTitleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetPaperByTitleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PaperList `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPaperByTitleResponse) Reset() {
	*x = GetPaperByTitleResponse{}
	mi := &file_paper_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaperByTitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaperByTitleResponse) ProtoMessage() {}

func (x *GetPaperByTitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaperByTitleResponse.ProtoReflect.Descriptor instead.
func (*GetPaperByTitleResponse) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{7}
}

func (x *GetPaperByTitleResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPaperByTitleResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPaperByTitleResponse) GetData() *PaperList {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddPaperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Author     string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Department string `protobuf:"bytes,3,opt,name=department,proto3" json:"department,omitempty"`
	Year       string `protobuf:"bytes,4,opt,name=year,proto3" json:"year,omitempty"`
	File       []byte `protobuf:"bytes,5,opt,name=file,proto3" json:"file,omitempty"` // 文件内容
}

func (x *AddPaperRequest) Reset() {
	*x = AddPaperRequest{}
	mi := &file_paper_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPaperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPaperRequest) ProtoMessage() {}

func (x *AddPaperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPaperRequest.ProtoReflect.Descriptor instead.
func (*AddPaperRequest) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{8}
}

func (x *AddPaperRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddPaperRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *AddPaperRequest) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *AddPaperRequest) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *AddPaperRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type AddPaperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AddPaperResponse) Reset() {
	*x = AddPaperResponse{}
	mi := &file_paper_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPaperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPaperResponse) ProtoMessage() {}

func (x *AddPaperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPaperResponse.ProtoReflect.Descriptor instead.
func (*AddPaperResponse) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{9}
}

func (x *AddPaperResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddPaperResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DeletePaperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePaperRequest) Reset() {
	*x = DeletePaperRequest{}
	mi := &file_paper_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePaperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePaperRequest) ProtoMessage() {}

func (x *DeletePaperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePaperRequest.ProtoReflect.Descriptor instead.
func (*DeletePaperRequest) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePaperRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeletePaperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeletePaperResponse) Reset() {
	*x = DeletePaperResponse{}
	mi := &file_paper_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePaperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePaperResponse) ProtoMessage() {}

func (x *DeletePaperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePaperResponse.ProtoReflect.Descriptor instead.
func (*DeletePaperResponse) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{11}
}

func (x *DeletePaperResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeletePaperResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpdatePaperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperId    int64  `protobuf:"varint,1,opt,name=paper_id,json=paperId,proto3" json:"paper_id,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Author     string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Department string `protobuf:"bytes,4,opt,name=department,proto3" json:"department,omitempty"`
	Year       string `protobuf:"bytes,5,opt,name=year,proto3" json:"year,omitempty"`
	Status     string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdatePaperRequest) Reset() {
	*x = UpdatePaperRequest{}
	mi := &file_paper_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePaperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaperRequest) ProtoMessage() {}

func (x *UpdatePaperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaperRequest.ProtoReflect.Descriptor instead.
func (*UpdatePaperRequest) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{12}
}

func (x *UpdatePaperRequest) GetPaperId() int64 {
	if x != nil {
		return x.PaperId
	}
	return 0
}

func (x *UpdatePaperRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdatePaperRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *UpdatePaperRequest) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *UpdatePaperRequest) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *UpdatePaperRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdatePaperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UpdatePaperResponse) Reset() {
	*x = UpdatePaperResponse{}
	mi := &file_paper_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePaperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaperResponse) ProtoMessage() {}

func (x *UpdatePaperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaperResponse.ProtoReflect.Descriptor instead.
func (*UpdatePaperResponse) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{13}
}

func (x *UpdatePaperResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdatePaperResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DownloadPaperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DownloadPaperRequest) Reset() {
	*x = DownloadPaperRequest{}
	mi := &file_paper_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadPaperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadPaperRequest) ProtoMessage() {}

func (x *DownloadPaperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadPaperRequest.ProtoReflect.Descriptor instead.
func (*DownloadPaperRequest) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{14}
}

func (x *DownloadPaperRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DownloadPaperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DownloadPaperResponse) Reset() {
	*x = DownloadPaperResponse{}
	mi := &file_paper_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadPaperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadPaperResponse) ProtoMessage() {}

func (x *DownloadPaperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadPaperResponse.ProtoReflect.Descriptor instead.
func (*DownloadPaperResponse) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{15}
}

func (x *DownloadPaperResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DownloadPaperResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_paper_proto protoreflect.FileDescriptor

var file_paper_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x22, 0xff, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x56, 0x4f, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x09, 0x50, 0x61,
	0x70, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x70, 0x61, 0x70, 0x65, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x56, 0x4f, 0x52,
	0x09, 0x70, 0x61, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x65, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x28, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x64,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x56, 0x4f, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x42, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0x69, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x42, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x87, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x38, 0x0a, 0x10, 0x41, 0x64, 0x64,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xa9, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x61, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x3b, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x26, 0x0a, 0x14, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3d, 0x0a, 0x15, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xbc, 0x04, 0x0a, 0x0c, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x42, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x42, 0x79,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x42, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72,
	0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x12, 0x1d, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x0d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x70, 0x61, 0x70, 0x65, 0x72,
	0x5f, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_paper_proto_rawDescOnce sync.Once
	file_paper_proto_rawDescData = file_paper_proto_rawDesc
)

func file_paper_proto_rawDescGZIP() []byte {
	file_paper_proto_rawDescOnce.Do(func() {
		file_paper_proto_rawDescData = protoimpl.X.CompressGZIP(file_paper_proto_rawDescData)
	})
	return file_paper_proto_rawDescData
}

var file_paper_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_paper_proto_goTypes = []any{
	(*PaperVO)(nil),                 // 0: paper_rpc.PaperVO
	(*PaperList)(nil),               // 1: paper_rpc.PaperList
	(*GetAllPaperRequest)(nil),      // 2: paper_rpc.GetAllPaperRequest
	(*GetAllPaperResponse)(nil),     // 3: paper_rpc.GetAllPaperResponse
	(*GetPaperByIdRequest)(nil),     // 4: paper_rpc.GetPaperByIdRequest
	(*GetPaperByIdResponse)(nil),    // 5: paper_rpc.GetPaperByIdResponse
	(*GetPaperByTitleRequest)(nil),  // 6: paper_rpc.GetPaperByTitleRequest
	(*GetPaperByTitleResponse)(nil), // 7: paper_rpc.GetPaperByTitleResponse
	(*AddPaperRequest)(nil),         // 8: paper_rpc.AddPaperRequest
	(*AddPaperResponse)(nil),        // 9: paper_rpc.AddPaperResponse
	(*DeletePaperRequest)(nil),      // 10: paper_rpc.DeletePaperRequest
	(*DeletePaperResponse)(nil),     // 11: paper_rpc.DeletePaperResponse
	(*UpdatePaperRequest)(nil),      // 12: paper_rpc.UpdatePaperRequest
	(*UpdatePaperResponse)(nil),     // 13: paper_rpc.UpdatePaperResponse
	(*DownloadPaperRequest)(nil),    // 14: paper_rpc.DownloadPaperRequest
	(*DownloadPaperResponse)(nil),   // 15: paper_rpc.DownloadPaperResponse
}
var file_paper_proto_depIdxs = []int32{
	0,  // 0: paper_rpc.PaperList.paper_list:type_name -> paper_rpc.PaperVO
	1,  // 1: paper_rpc.GetAllPaperResponse.data:type_name -> paper_rpc.PaperList
	0,  // 2: paper_rpc.GetPaperByIdResponse.data:type_name -> paper_rpc.PaperVO
	1,  // 3: paper_rpc.GetPaperByTitleResponse.data:type_name -> paper_rpc.PaperList
	2,  // 4: paper_rpc.PaperService.GetAllPaper:input_type -> paper_rpc.GetAllPaperRequest
	4,  // 5: paper_rpc.PaperService.GetPaperById:input_type -> paper_rpc.GetPaperByIdRequest
	6,  // 6: paper_rpc.PaperService.GetPaperByTitle:input_type -> paper_rpc.GetPaperByTitleRequest
	8,  // 7: paper_rpc.PaperService.AddPaper:input_type -> paper_rpc.AddPaperRequest
	10, // 8: paper_rpc.PaperService.DeletePaper:input_type -> paper_rpc.DeletePaperRequest
	12, // 9: paper_rpc.PaperService.UpdatePaper:input_type -> paper_rpc.UpdatePaperRequest
	14, // 10: paper_rpc.PaperService.DownloadPaper:input_type -> paper_rpc.DownloadPaperRequest
	3,  // 11: paper_rpc.PaperService.GetAllPaper:output_type -> paper_rpc.GetAllPaperResponse
	5,  // 12: paper_rpc.PaperService.GetPaperById:output_type -> paper_rpc.GetPaperByIdResponse
	7,  // 13: paper_rpc.PaperService.GetPaperByTitle:output_type -> paper_rpc.GetPaperByTitleResponse
	9,  // 14: paper_rpc.PaperService.AddPaper:output_type -> paper_rpc.AddPaperResponse
	11, // 15: paper_rpc.PaperService.DeletePaper:output_type -> paper_rpc.DeletePaperResponse
	13, // 16: paper_rpc.PaperService.UpdatePaper:output_type -> paper_rpc.UpdatePaperResponse
	15, // 17: paper_rpc.PaperService.DownloadPaper:output_type -> paper_rpc.DownloadPaperResponse
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_paper_proto_init() }
func file_paper_proto_init() {
	if File_paper_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_paper_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_paper_proto_goTypes,
		DependencyIndexes: file_paper_proto_depIdxs,
		MessageInfos:      file_paper_proto_msgTypes,
	}.Build()
	File_paper_proto = out.File
	file_paper_proto_rawDesc = nil
	file_paper_proto_goTypes = nil
	file_paper_proto_depIdxs = nil
}
