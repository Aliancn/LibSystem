syntax = "proto3";

package user;

option go_package = "./user";

message Base {
    int64 code = 1;
    string message = 2;
}

// 定义消息类型
message LoginRequest {
    string username = 1;
    string password = 2;
}

message LoginResponseData {
    string token = 1;
    string userId = 2;
    string username = 3;
    string role = 4;
}

message LoginResponse {
    Base base = 1;
    LoginResponseData data = 2;
}

message RegisterRequest {
    string username = 1;
    string password = 2;
}

message RegisterResponse {
    Base base = 1;
}

message LogoutRequest {}

message LogoutResponse {
    Base base = 1;
}

message GetAllUserRequest {}

message UserVO {
    int64 userId = 1;
    string username = 2;
    string password = 3;
    string role = 4;
    string name = 5;
    string phone = 6;
    string email = 7;
}

message UserList {
    repeated UserVO list = 1;
}

message GetAllUserResponse {
    Base base = 1;
    UserList data = 2;
}

message GetUserByNameRequest {
    string username = 1;
}

message GetUserByNameResponse {
    Base base = 1;
    UserVO data = 2;
}

message GetUserByIdRequest {
    int64 id = 1;
}

message GetUserByIdResponse {
    Base base = 1;
    UserVO data = 2;
}

message AddUserRequest {
    string username = 1;
    string password = 2;
    string role = 3;
    string name = 4;
    string phone = 5;
    string email = 6;
}

message AddUserResponse {
    Base base = 1;
}

message UpdateUserInfoRequest {
    int64 userId = 1;
    string name = 2;
    string phone = 3;
    string email = 4;
}

message UpdateUserInfoResponse {
    Base base = 1;
}

message DeleteUserRequest {
    int64 userId = 1;
}

message DeleteUserResponse {
    Base base = 1;
}

message EditPasswordRequest {
    int64 userId = 1;
    string newPassword = 2;
    string oldPassword = 3;
}

message EditPasswordResponse {
    Base base = 1;
}

// 定义服务
service UserService {
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc Register(RegisterRequest) returns (RegisterResponse);
    rpc Logout(LogoutRequest) returns (LogoutResponse);
    rpc GetAllUser(GetAllUserRequest) returns (GetAllUserResponse);
    rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse);
    rpc GetUserByName(GetUserByNameRequest) returns (GetUserByNameResponse);
    rpc AddUser(AddUserRequest) returns (AddUserResponse);
    rpc UpdateUserInfo(UpdateUserInfoRequest) returns (UpdateUserInfoResponse);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
    rpc EditPassword(EditPasswordRequest) returns (EditPasswordResponse);
}